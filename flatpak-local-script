#!/usr/bin/sh

DIRECTORY="$HOME/.config/flatpak-local-script"
REPO_PATH="$HOME/Projects/flatpak/repo"
STATE_DIR="$HOME/Projects/flatpak/state-dir"


if [[ ! -d "$DIRECTORY" ]]
then
    mkdir -p $DIRECTORY
fi

if [[ ! -d "$REPO_PATH" ]]
then
    mkdir -p $REPO_PATH
fi

run() { # $1 = alias to program
    PROGRAM_FULL_NAME=$(cat $DIRECTORY/$1)
    PROGRAM_NAME="${PROGRAM_FULL_NAME%.*}"
    flatpak-builder --repo=$REPO_PATH --force-clean --ccache --state-dir=$STATE_DIR/$PROGRAM_NAME build-dir $PROGRAM_FULL_NAME -y
    flatpak remote-add --if-not-exists --no-gpg-verify --user local-repo $REPO_PATH
    flatpak install local-repo $PROGRAM_NAME -y
    flatpak run $PROGRAM_NAME
}

create() {
    FILE="$DIRECTORY/$1"
    if [[ -f $FILE ]]; then
        echo "Config file $FILE is already exists"
        exit 1
    fi
    echo $2 >> $FILE
}

update() {
    PROGRAM_FULL_NAME=$(cat $DIRECTORY/$1)
    PROGRAM_NAME="${PROGRAM_FULL_NAME%.*}"
    flatpak-builder --repo=$REPO_PATH --force-clean --ccache --state-dir=$STATE_DIR/$PROGRAM_NAME build-dir $PROGRAM_FULL_NAME -y
    flatpak update local-repo $PROGRAM_NAME -y
    flatpak run $PROGRAM_NAME
}

list() {
    for file in $DIRECTORY/*; do
        echo "${file##*/}"
    done
}

remove() {
    FILE="$DIRECTORY/$1"
    if [[ -f $FILE ]]; then
        rm $FILE
    else
        echo "There is no file with name \"$1\" in the config folder"
        exit 1
    fi
}

show() {
    FILE="$DIRECTORY/$1"
    program_name=$(cat $FILE)
    echo "$program_name"
}

show_help() {
    echo "Usage:"
    echo "    flatpak-local-script COMMAND [OPTIONâ€¦]"
    echo
    echo "Builtin Commands:"
    echo "    run                Installs your app in local-repo for further development. Should be used only first time."
    echo "    update             Updates your app in local-repo for further development."
    echo "    create             Creates alias to your program in config folder in \$Home."
    echo "    list               Shows all saved aliases."
    echo "    show               Shows which app is equal to given alias."
    echo "    remove             Removes given alias from config folder."
    echo
    echo "Any other option shows that message."
}

if [[ $1 == "run" ]]; then
    if [[ -z "$2" ]]; then
        echo "Please add name to run"
        exit 1
    fi
    run $2
    exit 0
elif [[ $1 == "create" ]]; then
    if [[ -z "$2" ]]; then
        echo "No new name found"
        exit 1
    elif [[ -z "$3" ]]; then
        echo "No filename provided"
        exit 1
    fi
    create "$2" "$3"
    exit 0
elif [[ $1 == "update" ]]; then
    if [[ -z "$2" ]]; then
        echo "No name found"
        exit 1
    fi
    update "$2"
    exit 0
elif [[ $1 == "list" ]]; then
    list
    exit 0
elif [[ $1 == "show" ]]; then
    if [[ -z "$2" ]]; then
        echo "No name found"
        exit 1
    fi
    show "$2"
    exit 0
elif [[ $1 == "remove" ]]; then
    if [[ -z "$2" ]]; then
        echo "No name found"
        exit 1
    fi
    remove "$2"
    exit 0
else
    show_help
    exit 0
fi